package ${package}.${moduleName}.controller;

import ${mainPath}.common.annotation.SysLog;
import ${mainPath}.common.utils.PageUtil;
import ${mainPath}.common.utils.R;
import ${mainPath}.common.validator.ValidatorUtils;
import ${package}.${moduleName}.entity.${className}Entity;
import ${package}.${moduleName}.service.${className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Arrays;
import java.util.Map;


/**
 * ${comments}
 *
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    @PreAuthorize("hasAnyRole('${moduleName}:${pathName}:list')")
    public PageUtil list(@RequestParam Map<String, Object> params) {
        return ${classname}Service.queryPage(params);
    }

    /**
     * 保存、修改
     */
    @SysLog("保存修改${comments}")
    @RequestMapping("/saveOrUpdate")
    @PreAuthorize("hasAnyRole('${moduleName}:${pathName}:save','${moduleName}:${pathName}:update')")
    public R saveOrUpdate(@RequestBody ${className}Entity entity) {
        ValidatorUtils.validateEntity(entity);
        ${classname}Service.saveOrUpdate(entity);
        return R.ok();
    }

    /**
     * 删除
     */
    @SysLog("删除${comments}")
    @RequestMapping("/delete")
    @PreAuthorize("hasAnyRole('${moduleName}:${pathName}:delete')")
    public R delete(@RequestBody Long[] ids) {
        ${classname}Service.removeByIds(Arrays.asList(ids));
        return R.ok();
    }
}
